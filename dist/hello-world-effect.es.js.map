{"version":3,"file":"hello-world-effect.es.js","sources":["../hello-world-effect.js"],"sourcesContent":["\nimport { Effect, BlendFunction } from \"postprocessing\";\nimport { Uniform, Vector3 } from \"three\";\n\nclass HelloWorldEffect extends Effect {\n  constructor({\n    blendFunction = BlendFunction.NORMAL,\n    weights = new Vector3(1.0, 1.0, 1.0),\n} = {}) {\n\n    const fragmentShader = `\n      uniform vec3 weights;\n        \n      void mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor){\n        outputColor = vec4(inputColor.rgb * weights, inputColor.a);      \n      }\n`;\n\n    super(\"HelloWorldEffect\", fragmentShader, {\n      blendFunction,\n      uniforms: new Map([\n        [\"weights\", new Uniform(weights)],\n      ]),\n    });\n  }\n\n  updateWeights(r, g, b) {\n    // Set the weights uniform to the three components passed in\n    this.uniforms.get(\"weights\").value.set(r, g, b);\n  }\n\n}\n\nclass HelloWorldEffectElement extends HTMLElement {\n  static get observedAttributes() {\n    return ['red', 'green', 'blue'];\n  }\n\n  constructor() {\n    super();\n    // model-viewer-effects looks at the effects property of any child elements\n    // and expects a list of postprocressing Effects\n    this.effects = [ new HelloWorldEffect() ] ;\n  }\n\n  connectedCallback() {\n    super.connectedCallback && super.connectedCallback();\n\n    if (this.parentNode?.nodeName.toLowerCase() === \"effect-composer\") {\n      this.effectComposer = this.parentNode;\n    }\n\n    if (!this.effectComposer) {\n      throw new Error(\n        \"<hello-world-effect> must be a child of an <effect-composer>.\",\n      );\n    }\n\n    this.updateWeights();\n    // We poke the EffectComposer that there have been changes, and it needs to\n    // rebuild its EffectPasses\n    this.effectComposer.updateEffects();\n  }\n\n  disconnectedCallback() {\n    // When we are removed from the DOM, we need to clean up.\n    super.disconnectedCallback && super.disconnectedCallback();\n    for (const effect of this.effects) {\n      effect.dispose();\n    }\n    this.effectComposer?.updateEffects();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this.updateWeights();\n    // After updating the weights, we need to tell the EffectComposer that it needs a new frame\n    this.effectComposer?.queueRender();\n  }\n\n  updateWeights() {\n    // We interact with the shader in our Effect through a three-component vector uniform called \"weights\"\n    // This element maps a red, green, and blue html attribute to the components of this vector.\n\n    let weights = [];\n    const attrs = ['red', 'green', 'blue'];\n\n    for (const attr of attrs) {\n      if (!this.hasAttribute(attr)) {\n        weights.push(1.0); // if the attribute is not set, we want to ignore that channel, so we set the weight to 1\n      } else {\n        const value = parseFloat(this.getAttribute(attr));\n        if (isNaN(value)) {\n          throw new Error(`${attr} must be a number`);\n        }\n        weights.push(Math.max(0, value)); // set to 0 if negative\n      }\n    }\n\n    this.effects[0].updateWeights(...weights);\n  }\n}\n\ncustomElements.define('hello-world-effect', HelloWorldEffectElement);\n\nexport default HelloWorldEffectElement;"],"names":["HelloWorldEffect","Effect","blendFunction","BlendFunction","weights","Vector3","Uniform","r","g","b","HelloWorldEffectElement","_a","effect","name","oldValue","newValue","attrs","attr","value"],"mappings":";;AAIA,MAAMA,UAAyBC,EAAO;AAAA,EACpC,YAAY;AAAA,IACV,eAAAC,IAAgBC,EAAc;AAAA,IAC9B,SAAAC,IAAU,IAAIC,EAAQ,GAAK,GAAK,CAAG;AAAA,EACvC,IAAI,IAAI;AAUJ,UAAM,oBARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQmB;AAAA,MACxC,eAAAH;AAAA,MACA,UAAU,oBAAI,IAAI;AAAA,QAChB,CAAC,WAAW,IAAII,EAAQF,CAAO,CAAC;AAAA,MACxC,CAAO;AAAA,IACP,CAAK;AAAA,EACL;AAAA,EAEE,cAAcG,GAAGC,GAAGC,GAAG;AAErB,SAAK,SAAS,IAAI,SAAS,EAAE,MAAM,IAAIF,GAAGC,GAAGC,CAAC;AAAA,EAClD;AAEA;AAEA,MAAMC,UAAgC,YAAY;AAAA,EAChD,WAAW,qBAAqB;AAC9B,WAAO,CAAC,OAAO,SAAS,MAAM;AAAA,EAClC;AAAA,EAEE,cAAc;AACZ,UAAO,GAGP,KAAK,UAAU,CAAE,IAAIV,GAAoB;AAAA,EAC7C;AAAA,EAEE,oBAAoB;;AAOlB,QANA,MAAM,qBAAqB,MAAM,kBAAmB,KAEhDW,IAAA,KAAK,eAAL,gBAAAA,EAAiB,SAAS,mBAAkB,sBAC9C,KAAK,iBAAiB,KAAK,aAGzB,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MACD;AAGH,SAAK,cAAe,GAGpB,KAAK,eAAe,cAAe;AAAA,EACvC;AAAA,EAEE,uBAAuB;;AAErB,UAAM,wBAAwB,MAAM,qBAAsB;AAC1D,eAAWC,KAAU,KAAK;AACxB,MAAAA,EAAO,QAAS;AAElB,KAAAD,IAAA,KAAK,mBAAL,QAAAA,EAAqB;AAAA,EACzB;AAAA,EAEE,yBAAyBE,GAAMC,GAAUC,GAAU;;AACjD,SAAK,cAAe,IAEpBJ,IAAA,KAAK,mBAAL,QAAAA,EAAqB;AAAA,EACzB;AAAA,EAEE,gBAAgB;AAId,QAAIP,IAAU,CAAE;AAChB,UAAMY,IAAQ,CAAC,OAAO,SAAS,MAAM;AAErC,eAAWC,KAAQD;AACjB,UAAI,CAAC,KAAK,aAAaC,CAAI;AACzB,QAAAb,EAAQ,KAAK,CAAG;AAAA,WACX;AACL,cAAMc,IAAQ,WAAW,KAAK,aAAaD,CAAI,CAAC;AAChD,YAAI,MAAMC,CAAK;AACb,gBAAM,IAAI,MAAM,GAAGD,CAAI,mBAAmB;AAE5C,QAAAb,EAAQ,KAAK,KAAK,IAAI,GAAGc,CAAK,CAAC;AAAA,MACvC;AAGI,SAAK,QAAQ,CAAC,EAAE,cAAc,GAAGd,CAAO;AAAA,EAC5C;AACA;AAEA,eAAe,OAAO,sBAAsBM,CAAuB;"}